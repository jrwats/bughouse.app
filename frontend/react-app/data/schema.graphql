interface Node {
  id: ID!
}

type User implements Node {
  id: ID!
  uid: String!
  email: String
  name: String
  handle: String
  games(after: String, first: Int, before: String, last: Int): UserGameConnection
}

type UserGameConnection {
  edges: [UserGameEdge]
  pageInfo: PageInfo!
}

type UserGameEdge {
  cursor: String!
  node: UserGame
}

type PlayerData {
  uid: String
  rating: Int
  handle: String
}

type GameResult {
  board: Int
  winner: Int
  kind: Int
}

type UserGame {
  gid: String!,
  players: [PlayerData]
  result: GameResult
  rated: Boolean
  timestamp: Int
  startTime: String
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Query {
  user(id: String): User
  node(id: ID!): Node
}

